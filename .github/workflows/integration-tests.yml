name: Integration Tests

on:
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened]
    
permissions:
  contents: read
  pull-requests: write

jobs:
  build:
    name: Build and Test Terraform Client Provider
    runs-on: ${{ vars.RUNNER_RUNS_ON || 'ubuntu-latest' }} # settings > secrets and variables > variables > RUNNER_RUNS_ON

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 #v5.3.0
      with:
        go-version: ${{ vars.GO_VERSION || '1.24' }} # settings > secrets and variables > variables > GO_VERSION
        cache: true
        cache-dependency-path: |
          **/go.mod
          **/go.sum

    - name: Install dependencies
      run: go mod download

    - name: Build Binary from Source
      run: go build -v

    - name: Override Provider with Binary
      run: |
        PWD=$(pwd)
        sed -i "s|BINARY_PATH|$PWD|g" .terraformrc_template
        cp .terraformrc_template ~/.terraformrc

    - name: Install Terraform
      run: |
        sudo apt update
        sudo apt install -y gnupg software-properties-common
        wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null
        gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(grep -oP '(?<=UBUNTU_CODENAME=).*' /etc/os-release || lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
        sudo apt update
        sudo apt install terraform

    - name: DBaaS Integration Tests
      run: |
        cp ./integration-tests/dbaas/common/*.tf .
        cp ./integration-tests/dbaas/mysql/single_instance/step1.tf .
        REGION="br-se1"
        ENV="pre-prod"
        API_KEY="980733ee-db90-4ebc-a70a-fe58db4ef62a"
        ENGINE_NAME="mysql"
        ENGINE_VERSION="8.0"
        DB_PREFIX="github"
        DB_PASSWORD="admin1234"
        terraform apply -auto-approve -var="mgc_region=${REGION}" -var="env=${ENV}" -var="api_key=${API_KEY}" -var="engine_name=${ENGINE_NAME}" -var="engine_version=${ENGINE_VERSION}" -var="db_prefix=${DB_PREFIX}" -var="db_password=${DB_PASSWORD}"
